version: "3.9"

services:
  scraper:
    build:
      context: .
      dockerfile: Dockerfile.scraper
    container_name: scraper
    command: ["python", "-m", "app.scraper"]
    volumes:
      - ./:/usr/src/app
    environment:
      - PYTHONUNBUFFERED=1
      - MONGO_URL=mongodb://${MONGO_USER}:${MONGO_PASS}@${MONGO_HOST}:${MONGO_PORT}
      - MONGO_DB=${MONGO_DB}
    env_file:
      - .env
    depends_on:
      - mongo
    networks:
      - scraper_net

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: scraper_api
    command: ["uvicorn", "app.api:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    volumes:
      - ./:/usr/src/app
    environment:
      - PYTHONUNBUFFERED=1
      - MONGO_URL=mongodb://${MONGO_USER}:${MONGO_PASS}@${MONGO_HOST}:${MONGO_PORT}
      - MONGO_DB=${MONGO_DB}
    env_file:
      - .env
    depends_on:
      - mongo
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - scraper_net

  mongo:
    image: mongo:7
    container_name: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    volumes:
      - mongo_data:/data/db
    networks:
      - scraper_net

  frontend:
    image: node:20-slim
    container_name: frontend
    working_dir: /app
    ports:
      - "3000:5173"  
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    depends_on:
      - api
    networks:
      - scraper_net
    restart: unless-stopped

networks:
  scraper_net:
    driver: bridge

volumes:
  mongo_data:
  frontend_node_modules:
